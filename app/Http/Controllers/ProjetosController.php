<?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use App;use Vinkla\Facebook\Facades\Facebook;use Cache;use App\Http\Requests\RequestProjetoForm;class ProjetosController extends Controller{    public function __construct()     {        $this->middleware('auth')->except('show','index');    }    /**     * Display a listing of the resource.     *     * @return \Illuminate\Http\Response     */    public function index()    {        $projetos = App\Projeto::orderBy('created_at', 'desc')->paginate(6);        $categorias = App\Categoria::all();        return view('projeto.ver-todos')->with(compact('projetos','categorias'));    }    /**     * Show the form for creating a new resource.     *     * @return \Illuminate\Http\Response     */    public function create()    {        $ambitos = App\Ambito::all()->pluck('name','id');        $categorias = App\Categoria::all()->pluck('name','id');        $eixos = App\Eixo::all()->pluck('name','id');        $instituicoes = App\Instituicao::all()->pluck('name','id');        return view('projeto.form-novo-novo')->with(compact('ambitos', 'categorias', 'eixos', 'instituicoes'));    }    /**     * Store a newly created resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @return \Illuminate\Http\Response     */    //public function store(RequestProjetoForm $request)    public function store(Request $request)    {        $n = 0;        $var2 = [];        $var = [            'name' => $request->get('name'),            'descricao' => $request->get('descricao'),            'componente_curricular' => $request->get('componente_curricular'),            'tags' => $request->get('tags'),            'n_aulas' => $request->get('n_aulas'),            'n_alunos' => $request->get('n_alunos'),            'projeto' => $request->get('projeto'),            'unidade' => $request->get('unidade')        ];        //dd($var);        //dd($var2);        //dd($request);        try{            $projeto = new App\Projeto();            //$projeto->fill($request->only('name', 'resultado', 'descricao', 'instituicao_id', 'eixo_id', 'categoria_id', 'ambito_id', 'cronograma', 'comentarios_prof', 'ancora', 'questao_motriz', 'n_alunos', 'prazo', 'feedback', 'tags'));            $projeto->fill($var);            $projeto->fill(['user_id' => auth()->user()->id]);            $projeto->tags();            //dd($projeto);            $projeto->save();            while($request->has('name_prof_'.$n,'email_'.$n) and !empty($request->only('name_prof_'.$n, 'email_'.$n))){                $varProf = [                    'name_prof' => $request->get('name_prof_'.$n),                    'email' => $request->get('email_'.$n),                ];                $projeto->prof($varProf);                //$prof_aux = App\Prof_aux::firstOrCreate($varProf);                //$projeto->prof_aux_id = $prof_aux->id;                $n++;            }            App\Categoria::create(['name' => $projeto->componente_curricular]);            $n = 0;            //dd($projeto->campos());            while($request->has('campoNome_'.$n)){                $varCampos = [                    'name' => $request->get('campoNome_'.$n),                    'val' => $request->get('campoVal_'.$n),                    'projeto_id' => $projeto->id                ];                $projeto->campos()->create(['name' => $request->get('campoNome_'.$n), 'val' => $request->get('campoVal_'.$n)]);                //App\Campo::create($varCampos);                //$projeto->campos()->create($varCampos);                $n++;            }            //dd($projeto->campos());        } catch(\Excepition $e){            return redirect()->route('home')->with(['erro' =>'Erro ao tentar criar o Projeto, por favor confira os dados e tente novamente']);        }        return redirect()->route('home')->with(['sucesso' => 'Projeto criado com Sucesso!']);    }    /**     * Display the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function show($id)    {        $projeto = App\Projeto::find($id);        $tags = App\Tag::all();        if(! Cache::has($id))        {            Cache::add($id, 'contador', 0.30);            $projeto->total_visualizacao+=1;            $projeto->save();        }        if(auth()->user())        {            $user = auth()->user();            $like = App\Like::where('projeto_id', $projeto->id)->where('user_id', $user->id)->first();        }        else            $like = null;        $url = env('APP_URL')."/projeto/".$id;        //dd($projeto->prof_aux);        $campos = $projeto->campos;        return  view('projeto.ver-um')->with(compact('projeto','like','url','tags','campos'));    }    /**     * Show the form for editing the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function edit($id)    {        //    }    /**     * Update the specified resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function update(Request $request, $id)    {        //    }    /**     * Remove the specified resource from storage.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function destroy($id)    {        //    }}